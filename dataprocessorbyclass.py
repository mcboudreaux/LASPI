# -*- coding: utf-8 -*-
"""dataProcessorbyClass.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A7KLhCtM7u7d1lF5kM1P_p7oDiURvNdd

Descrição: Sistema para comparação entre dados da tabela final e tabela de overhead

OBS: Para rodar, copiar arquivo para "Meu Drive" ou mudar diretório no código

## Preparando Ambiente

### Instalar bibliotecas
"""

from google.colab import drive;
from openpyxl import Workbook,load_workbook;
import pandas as pd
import numpy as np
import openpyxl
import os

# Conectar ao Drive
drive.mount('/media/gdrive')

# Commented out IPython magic to ensure Python compatibility.
# Definindo Workplace
# %cd '/media/gdrive/MyDrive/Overhead'

"""###Definir Variáveis Gerais"""

# formata uma String "valor", para que possa ser lida como float
def formata_valor(valor):
    try:
        # Tenta converter o valor para float
        valor_float = float(valor)
        return valor_float
    except ValueError:
        # Se a conversão falhar, formata a string e tenta novamente
        valor = valor.replace(".", "").replace(",", ".")
        try:
            valor_float = float(valor)
            return valor_float
        except ValueError:
            print("ERRO na conversão dos valores")
            return None

"""## Totalização Overhead

#### Totaliza Arquivo Overhead por Turma

"""

# Commented out IPython magic to ensure Python compatibility.
# %cd '/media/gdrive/MyDrive/Overhead'

def totaliza_turma_overhead(arquivo):
    df = pd.read_excel(arquivo)

    aux = 4
    #temos 5 linhas acima da tabela em si, logo aux e i não começam em 0

    for i in range(5, len(df)):
        turma = df.at[i, df.columns[3]]
        credito = df.at[i, df.columns[5]]

        #se já tiver turma na lista, acrescenta a seu valor total
        if turma == df.at[aux, df.columns[7]]:
            df.at[aux, df.columns[8]] += credito

        #se não tiver a turma, passa para a linha de baixo que recebe a turma e seu primeiro crédito
        else:
            aux += 1
            df.at[aux, df.columns[7]] = turma
            df.at[aux, df.columns[8]] = credito

    # salva alterações
    df.to_excel(arquivo, index=False)


arquivo = '/media/gdrive/MyDrive/Overhead/Somente_Overhead_2023.xlsx'
totaliza_turma_overhead(arquivo)

print('Finished!')

"""## Totalização Final

#### Totaliza Tabela Final por Turma

"""

# Commented out IPython magic to ensure Python compatibility.
# %cd '/media/gdrive/MyDrive/Overhead'

def totaliza_turma_final(arquivo,tabelao):

    # lê tabela final e arquivo a ser comparado
    final = pd.read_excel(tabelao)
    df = pd.read_excel(arquivo)

    # passamos por todas as linhas da tabela final
    for i in range(len(final)):

          # recebemos o código da turma (returando o ínicio "POLI") e o valor pago
          turma = final.at[i, final.columns[7]].replace("POLI ","")
          valor_pago = formata_valor(str(final.at[i, final.columns[6]]))

          # range geral para todas as linhas do arquivo
          # for j in range(6, len(df)):

          # range específico das linhas com turmas (Coluna K)
          for j in range(6, 101):

              projeto = str(df.at[j, df.columns[7]])

              if projeto == turma:
                  df.at[j, df.columns[10]] = turma
                  df.at[j, df.columns[11]] += valor_pago

    # salva alterações
    df.to_excel(arquivo, index=False)

arquivo = 'Somente_Overhead_2023.xlsx'
tabelao = 'final_September_2023.xlsx'

totaliza_turma_final(arquivo, tabelao)

print('Finished!')

"""## Formatação

(Formatação feita manualmente)
"""